snippet imr
import React from "react";
endsnippet

snippet cn
className="${1}"
endsnippet

snippet c 
class="${1}"
endsnippet

snippet cl "console log"
console.log(${1})${2}
endsnippet

snippet imra
import React, { useState, useEffect } from "react";
endsnippet

snippet imrc "import react component" 
import { Component } from 'react'
endsnippet

snippet imf "import from"
import ${1} from "${2}";
endsnippet

snippet imfc "import from curls"
import { ${2} } from "${1}";
endsnippet

snippet sl "stateless functional component"
const ${1} = ({ }) => {
	return (
		${2}
	);
};
endsnippet

snippet ue "useEffect"
useEffect(() => {

}, []);
endsnippet

snippet us "useState"
const [${1}, ${2}] = useState(${3});
endsnippet

snippet cs "createSignal solid"
const [${1}, ${2}] = createSignal(${3});
endsnippet

snippet ct "createStore solid"
const [${1}, ${2}] = createStore(${3});
endsnippet

snippet ce "createEffect solid"
createEffect(() => {
	${1}
});
endsnippet

snippet sla "stateless with useeffect" b
const ${1} = (props) => {
	
	useEffect(() => {
		${2}
	}, []);

	return (
		${3:<div></div>}
	);
};
endsnippet

snippet cls "create react class"
class ${1} extends Component {
	state = {
	
	};
	
	render() {
		return (
			
		);
	}
}

export default $1
endsnippet

snippet ed "export default"
export default $1;
endsnippet

snippet if "if (condition)"
if ($1) {
	$2
}
endsnippet

snippet ife "if (condition) else"
if ($1) {
	$2
} else {
	$3
}
endsnippet

snippet try "try catch"
try {
	$1
} catch (e) {
	$2
};
endsnippet

snippet switch "switch statement"
switch ($1) {
	case '$2':
		$3
		break;
}
endsnippet

snippet fsp "Fastify Post Endpoint"
fastify.post("/${1:Endpoint}", async (request, reply) => {
	let { ${2:data} } = request.body;
});
endsnippet

snippet req "require node"
const ${1} = require("$1");
endsnippet

snippet elid "Get Element By Id"
document.getElementById("${1}");
endsnippet
	
